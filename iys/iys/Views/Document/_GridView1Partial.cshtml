@{
    int index = 0;
    var grid = Html.DevExpress().GridView(settings =>
    {
        settings.Name = "GridViewDocument";
        settings.CallbackRouteValues = new { Controller = "Document", Action = "GridView1Partial" };

        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Document", Action = "GridView1PartialAddNew" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Document", Action = "GridView1PartialUpdate" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Document", Action = "GridView1PartialDelete" };
        settings.SettingsEditing.Mode = GridViewEditingMode.EditFormAndDisplayRow;
        settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
        settings.CommandColumn.ShowEditButton = true;

        settings.KeyFieldName = "DOCUMENT_CODE";
        settings.SettingsPager.Visible = true;
        settings.Settings.ShowGroupPanel = true;
        settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        settings.Columns.Add(column =>
        {
            column.FieldName = "COURSE_CODE";
            column.Caption = "KURS";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            column.Name = "COURSE_CODE";
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = iys.Controllers.BaseController.getCourse();
            comboBoxProperties.TextField = "Value";
            comboBoxProperties.ValueField = "Key";
            comboBoxProperties.ValueType = typeof(int);
            comboBoxProperties.ClientSideEvents.SelectedIndexChanged = "CoursesCombo_SelectedIndexChanged";

        });
        settings.CellEditorInitialize = (sender, e) =>
            {
                e.Editor.ReadOnly = false;
            };

        settings.Columns.Add(column =>
        {
            column.Caption = "BÖLÜM";
            column.FieldName = "CHAPTER_CODE";
            column.Name = "CHAPTER_CODE";
            ///*Display Mode*/
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
          
            ComboBoxProperties propertiesComboBox = column.PropertiesEdit as ComboBoxProperties;
            int coursCode = 0;
            try
            {
                if (Model.Count > 0)
                {
                    coursCode = (int)Model[index].COURSE_CODE;
                }
            }
            catch (Exception ex)
            {

            }
            propertiesComboBox.DataSource = iys.Controllers.BaseController.getChapter(coursCode);
            propertiesComboBox.TextField = "Value";
            propertiesComboBox.ValueField = "Key";
            propertiesComboBox.ValueType = typeof(int);
            propertiesComboBox.ClientSideEvents.SelectedIndexChanged = "ChaptersCombo_SelectedIndexChanged";
          
            ///*Display Mode*/

            /*Edit Mode*/
            column.SetEditItemTemplateContent(c =>
            {              
                var courseID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "COURSE_CODE");
                var chapterID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, c.Column.FieldName);
                ViewData["CHAPTER_CODE"] = chapterID;
                var chapters = (chapterID == null)
                    ? iys.Controllers.BaseController.getChapter(0)
                    : iys.Controllers.BaseController.getChapter((int)courseID);
                Html.RenderPartial("PartialViewChapterCombo", chapters);
            });
            /*Edit Mode*/
           
        });

        settings.Columns.Add(column =>
        {
            column.Caption = "DERS";
            column.FieldName = "LESSON_CODE";
            column.Name = "LESSON_CODE";
            ///*Display Mode*/
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            ComboBoxProperties propertiesComboBox = column.PropertiesEdit as ComboBoxProperties;

            int coursCode = 0;
            int chapterCode = 0;
            try
            {
                if (Model.Count > 0)
                {
                    coursCode = (int)Model[index].COURSE_CODE;
                    chapterCode = (int)Model[index].CHAPTER_CODE;
                }
            }
            catch (Exception ex)
            {

            }

          
            propertiesComboBox.DataSource = iys.Controllers.BaseController.getLesson(coursCode,chapterCode);
            propertiesComboBox.TextField = "Value";
            propertiesComboBox.ValueField = "Key";
            propertiesComboBox.ValueType = typeof(int);
            ///*Display Mode*/

            /*Edit Mode*/
            column.SetEditItemTemplateContent(c =>
            {
                var courseID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "COURSE_CODE");
                var chapterID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "CHAPTER_CODE");
                var lessonID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, c.Column.FieldName);
                ViewData["LESSON_CODE"] = lessonID;
                var lessons = (lessonID == null)
                    ? iys.Controllers.BaseController.getLesson(0,0)
                    : iys.Controllers.BaseController.getLesson((int)courseID,(int)chapterID);
                Html.RenderPartial("PartialViewLessonCombo", lessons);
            });
            /*Edit Mode*/

        });


        settings.Columns.Add(column =>
        {
            column.FieldName = "DOCUMENT_NAME";
            column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            column.Caption = "DÖKÜMAN";
        });

    
        //settings.Columns.Add("DOCUMENT_TYPE");
        //settings.Columns.Add("PATH");
        //settings.Columns.Add("LINK_TYPE");
        //settings.Columns.Add("DURATION");
        settings.Columns.Add(column =>
        {
            column.FieldName = "DOCUMENT_TYPE";
            column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            column.Caption = "DÖKÜMAN TÝPÝ";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "PATH";
            column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            column.Caption = "DOSYA YOLU";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "LINK_TYPE";
            column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            column.Caption = "LÝNK TÝPÝ";
        });
        settings.Columns.Add(column =>
        {
            column.FieldName = "DURATION";
            column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            column.Caption = "SÜRE";
            column.ColumnType = MVCxGridViewColumnType.TimeEdit;
        });

        index++;

    });


    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()