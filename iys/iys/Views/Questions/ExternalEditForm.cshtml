@model  Tuple<IList<iys.Models.TreeListModelItem>, iys.ModelProject.QUESTION>
@{
    ViewBag.Title = "Soru";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<script src="~/Scripts/angular.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<!--/Angular-->
<script>
    var m_document = angular.module('m_document', []);
    m_document.controller('c_document', function ($scope) {
        $scope.Secim = function (_name, _text) {
            $("input[name$='dersAdi']").val(_text);
            $('#Item2_DOCUMENT_CODE').val(_name);
        };
    });
</script>



<script>
    function OnTreeViewNodeClick(s, e) {
        angular.element(document.getElementById('documentDiv')).scope().Secim(e.node.name, e.node.text);//   $("#cmbNodes").val(e.node.name);
    }
</script>
<!--mesajı ve  elemanların içeriğini temeizleyen script-->
<script type="text/javascript">
    var ClearMessage = function () {
        $("#Soru :input[type='text']").each(function () {
            $(this).val("");
            var input = $(this); // This is the jquery object of the input, do what you will
        });
        $('#Item2_QUESTION_CODE').val("-1");
    };
</script>
<!--/mesajı ve  elemanların içeriğini temeizleyen script-->

<div class="col-md-4">
    <span class="sub-title">Konular</span>
    @Html.Partial("TreeList", Model.Item1)
</div>

<div class="col-md-4 divider">


    @using (Ajax.BeginForm("addQuestion", "Questions", FormMethod.Post, new AjaxOptions { OnBegin = "$('#mesaj').html('')", UpdateTargetId = "mesaj", OnSuccess = "ClearMessage" }))
    {
    <!--Angular-->
        <div ng-app="m_document">
            <div id="documentDiv" ng-controller="c_document">

                <span class="sub-title my">Konu</span>
                @Html.DevExpress().TextBox(settings =>
                    {
                        settings.Name = "dersAdi";
                    }).GetHtml()
                <div style="display:none">
                    @Html.HiddenFor(model => model.Item2.DOCUMENT_CODE)
                    @Html.HiddenFor(model => model.Item2.QUESTION_CODE)
                </div>
                @Html.HiddenFor(model => model.Item2.COURSE_CODE)
                @Html.HiddenFor(model => model.Item2.CHAPTER_CODE)
                @Html.HiddenFor(model => model.Item2.LESSON_CODE)


            </div>
            <!--Soru-->

            <div id="Soru" class="col-md-12">
                <div class="row">
                    <span class="sub-title">Soru</span>
                    @*@Html.DevExpress().TextBoxFor(model => model.Item2.questionText).GetHtml()*@

                    @Html.DevExpress().Memo(settings =>
                   {
                       settings.Name = "Item2.questionText";
                       settings.Text = Model.Item2.questionText;
                       settings.Width = 500;
                       settings.Height = 75;
                   }).GetHtml()
                </div>
                <!--Başlık-->
                <div class="row">

                    <div class="col-md-1"></div>
                    <div class="col-md-6 sub-title">İçerik</div>
                    <div class="col-md-4 sub-title">Doğru Cevap</div>
                </div>
                <!--/Başlık-->
                <!--satirlar-->
                @{
        char[] siklar = { 'A', 'B', 'C', 'D' };

        for (int i = 0; i < 4; i++)
        {
            <div class="row">

                <div class="col-md-1" style="font-weight:bold">
                    @siklar[i]
                </div>
                <div class="col-md-6">
                    @switch (i)
                    {
                        case 0:

                            @Html.DevExpress().TextBoxFor(model => model.Item2.chooseAText).GetHtml()
                            break;
                        case 1:
                        @Html.DevExpress().TextBoxFor(model => model.Item2.chooseBText).GetHtml()
                            break;
                        case 2:
                        @Html.DevExpress().TextBoxFor(model => model.Item2.chooseCText).GetHtml()
                            break;
                        case 3:
                        @Html.DevExpress().TextBoxFor(model => model.Item2.chooseDText).GetHtml()
                            break;                      
                        default:
                            break;
                    }
                </div>
                <div class="col-md-3">
                    @Html.RadioButtonFor(model => model.Item2.rightChoose, @siklar[i])
                </div>
            </div>

        }

                }
                <!--/satirlar-->
            </div><!--/Soru-->

            <div style="float:left">
                @Html.DevExpress().Button(settings =>
{
    settings.Name = "btnKaydet";
    settings.Text = "Kaydet";
    settings.UseSubmitBehavior = true;
}).GetHtml()
            </div>
        </div>
        <div id="mesaj" style="float:left;margin-left:5px;" class="question">

        </div>


        <div style="padding: 20px; display: inline-block; vertical-align: top;">

        </div>

    }
