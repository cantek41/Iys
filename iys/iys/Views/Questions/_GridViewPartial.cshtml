@{
	var grid = Html.DevExpress().GridView(settings => {
        settings.Name = "GridView";
        settings.CallbackRouteValues = new { Controller = "Questions", Action = "GridViewPartial" };

        //settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Questions", Action = "GridViewPartialAddNew" };
     //   settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Questions", Action = "ExternalEditFormEdit" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Questions", Action = "DeleteQuestion" };
        //settings.SettingsEditing.Mode = GridViewEditingMode.EditForm;
        //settings.SettingsBehavior.ConfirmDelete = true;

        settings.CommandColumn.Visible = true;
        //settings.CommandColumn.ShowNewButton = true;
        settings.CommandColumn.ShowDeleteButton = true;
      //  settings.CommandColumn.ShowEditButton = true;


        settings.Columns.Add(column =>
        {
            column.Caption = "#";
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("Edit", "ExternalEditFormEdit", new { ProductID = DataBinder.Eval(c.DataItem, "QUESTION_CODE") }) 
                );
            });
            column.SetHeaderTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    Html.ActionLink("New", "ExternalEditFormEdit", new { ProductID = -1 }).ToHtmlString()
                    
                );
            });
            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 70;
        });
        
        
        
        
		settings.KeyFieldName = "QUESTION_CODE";

		settings.SettingsPager.Visible = true;
		settings.Settings.ShowGroupPanel = true;
		settings.Settings.ShowFilterRow = true;
        settings.SettingsBehavior.AllowSelectByRowClick = true;


        settings.Columns.Add(column =>
        {
            column.FieldName = "questionText";
            column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
            column.Caption = "SORU";
        });

        settings.Columns.Add(column =>
        {
            column.FieldName = "QUESTION_TYPE";
            column.Caption = "SORU TÝPÝ";
            column.ColumnType = MVCxGridViewColumnType.ComboBox;
            column.Name = "QUESTION_TYPE";
            var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
            comboBoxProperties.DataSource = iys.Controllers.BaseController.getType(4);
            comboBoxProperties.TextField = "Value";
            comboBoxProperties.ValueField = "Key";
            comboBoxProperties.ValueType = typeof(int);

        });

               
                settings.Columns.Add(column =>
                {
                    column.FieldName = "COURSE_CODE";
                    column.Caption = "KURS";
                    column.ColumnType = MVCxGridViewColumnType.ComboBox;
                    column.Name = "COURSE_CODE";
                    var comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
                    comboBoxProperties.DataSource = iys.Controllers.BaseController.getCourse();
                    comboBoxProperties.TextField = "Value";
                    comboBoxProperties.ValueField = "Key";
                    comboBoxProperties.ValueType = typeof(int);
                    comboBoxProperties.ClientSideEvents.SelectedIndexChanged = "CoursesCombo_SelectedIndexChanged";

                });
                settings.CellEditorInitialize = (sender, e) =>
                {
                    e.Editor.ReadOnly = false;
                };

                settings.Columns.Add(column =>
                {
                    column.Caption = "BÖLÜM";
                    column.FieldName = "CHAPTER_CODE";
                    column.Name = "CHAPTER_CODE";
                    ///*Display Mode*/
                    column.ColumnType = MVCxGridViewColumnType.ComboBox;

                    ComboBoxProperties propertiesComboBox = column.PropertiesEdit as ComboBoxProperties;

                    propertiesComboBox.TextField = "Value";
                    propertiesComboBox.ValueField = "Key";
                    propertiesComboBox.ValueType = typeof(int);
                    propertiesComboBox.ClientSideEvents.SelectedIndexChanged = "ChaptersCombo_SelectedIndexChanged";

                    ///*Display Mode*/

                    /*Edit Mode*/
                    column.SetEditItemTemplateContent(c =>
                    {
                        var courseID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "COURSE_CODE");
                        var chapterID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, c.Column.FieldName);
                        ViewData["CHAPTER_CODE"] = chapterID;
                        var chapters = (chapterID == null)
                            ? iys.Controllers.BaseController.getChapter(0)
                            : iys.Controllers.BaseController.getChapter((int)courseID);
                        Html.RenderPartial("PartialViewChapterCombo", chapters);
                    });
                    /*Edit Mode*/

                });

                settings.Columns.Add(column =>
                {
                    column.Caption = "DERS";
                    column.FieldName = "LESSON_CODE";
                    column.Name = "LESSON_CODE";
                    ///*Display Mode*/
                    column.ColumnType = MVCxGridViewColumnType.ComboBox;
                    ComboBoxProperties propertiesComboBox = column.PropertiesEdit as ComboBoxProperties;

                    propertiesComboBox.TextField = "Value";
                    propertiesComboBox.ValueField = "Key";
                    propertiesComboBox.ValueType = typeof(int);
                    ///*Display Mode*/

                    /*Edit Mode*/
                    column.SetEditItemTemplateContent(c =>
                    {
                        var courseID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "COURSE_CODE");
                        var chapterID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "CHAPTER_CODE");
                        var lessonID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, c.Column.FieldName);
                        ViewData["LESSON_CODE"] = lessonID;
                        var lessons = (lessonID == null)
                            ? iys.Controllers.BaseController.getLesson(0, 0)
                            : iys.Controllers.BaseController.getLesson((int)courseID, (int)chapterID);
                        Html.RenderPartial("PartialViewLessonCombo", lessons);
                    });
                    /*Edit Mode*/

                });

                settings.Columns.Add(column =>
                {
                    column.Caption = "DÖKÜMAN";
                    column.FieldName = "DOCUMENT_CODE";
                    column.Name = "DOCUMENT_CODE";
                    ///*Display Mode*/
                    column.ColumnType = MVCxGridViewColumnType.ComboBox;
                    ComboBoxProperties propertiesComboBox = column.PropertiesEdit as ComboBoxProperties;
                   
                    propertiesComboBox.TextField = "Value";
                    propertiesComboBox.ValueField = "Key";
                    propertiesComboBox.ValueType = typeof(int);
                    ///*Display Mode*/

                    /*Edit Mode*/
                    column.SetEditItemTemplateContent(c =>
                    {
                        var courseID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "COURSE_CODE");
                        var chapterID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "CHAPTER_CODE");
                        var lessonID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, "LESSON_CODE");
                        var documentID = c.Grid.GetRowValues(c.Grid.EditingRowVisibleIndex, c.Column.FieldName);
                        ViewData["DOCUMENT_CODE"] = documentID;
                        var documents = (documentID == null)
                            ? iys.Controllers.BaseController.getDocument(0,0,0)
                            : iys.Controllers.BaseController.getDocument((int)courseID, (int)chapterID,(int)lessonID);
                        Html.RenderPartial("PartialViewDocumentCombo", documents);
                    });
                    /*Edit Mode*/

                });
        
			
				settings.Columns.Add("ROW_NO");
                settings.Columns.Add("LEVEL");
                settings.Columns.Add("RES_CODE");

              

                settings.CustomColumnDisplayText = (sender, e) =>
                {
                    try
                    {
                        //if (e.Column.FieldName == "COURSE_CODE")
                        //    Ccode = (int)e.Value;
                        if (e.Column.FieldName == "CHAPTER_CODE")
                        {
                            e.DisplayText = iys.Controllers.BaseController.getChapterString((int)e.Value);
                            //ChCode = (int)e.Value;
                        }
                        if (e.Column.FieldName == "LESSON_CODE")
                            e.DisplayText = iys.Controllers.BaseController.getLessonString((int)e.Value);
                        if (e.Column.FieldName == "DOCUMENT_CODE")
                            e.DisplayText = iys.Controllers.BaseController.getDocumentString((int)e.Value);

                    }
                    catch (Exception)
                    {


                    }
                };
                
			});
		if (ViewData["EditError"] != null){
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Model).GetHtml()